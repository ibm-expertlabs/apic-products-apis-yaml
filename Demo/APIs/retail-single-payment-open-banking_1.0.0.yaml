basePath: /OB-v312/IDBP-v1
consumes:
- application/json
definitions:
  ConfirmFundResponse:
    description: ''
    example: '{"Data":{"FundsAvailableResult":{"FundsAvailableDateTime":"2017-06-05T15:15:23+00:00","FundsAvailable":true}},"Links":{"Self":"https://api.alphabank.com/open-banking/v3.1/pisp/domestic-payment-consents/58923/funds-confirmation"},"Meta":{}}'
    properties:
      Data:
        properties:
          FundsAvailableResult:
            properties:
              FundsAvailable:
                type: boolean
              FundsAvailableDateTime:
                type: string
            type: object
        type: object
      Links:
        properties:
          Self:
            type: string
        type: object
      Meta:
        properties: {}
        type: object
    type: object
  ConsentStatusResponse:
    description: ''
    example: '{"Data":{"ConsentId":"58923","Status":"Authorised","CreationDateTime":"2017-06-05T15:15:13+00:00","StatusUpdateDateTime":"2017-06-05T15:15:22+00:00","Initiation":{"InstructionIdentification":"ACME412","EndToEndIdentification":"FRESCO.21302.GFX.20","InstructedAmount":{"Amount":"165.88","Currency":"GBP"},"CreditorAccount":{"SchemeName":"UK.OBIE.SortCodeAccountNumber","Identification":"08080021325698","Name":"ACME
      Inc","SecondaryIdentification":"0002"},"RemittanceInformation":{"Reference":"FRESCO-101","Unstructured":"Internal
      ops code 5120101"}}},"Risk":{"PaymentContextCode":"EcommerceGoods","MerchantCategoryCode":"5967","MerchantCustomerIdentification":"053598653254","DeliveryAddress":{"AddressLine":["Flat
      7","Acacia Lodge"],"StreetName":"Acacia Avenue","BuildingNumber":"27","PostCode":"GU31
      2ZZ","TownName":"Sparsholt","CountySubDivision":["Wessex"],"Country":"UK"}},"Links":{"Self":"https://api.alphabank.com/open-banking/v3.1/pisp/domestic-payment-consents/58923"},"Meta":{}}'
    properties:
      Data:
        properties:
          ConsentId:
            type: string
          CreationDateTime:
            type: string
          Initiation:
            properties:
              CreditorAccount:
                properties:
                  Identification:
                    type: string
                  Name:
                    type: string
                  SchemeName:
                    type: string
                  SecondaryIdentification:
                    type: string
                type: object
              EndToEndIdentification:
                type: string
              InstructedAmount:
                properties:
                  Amount:
                    type: string
                  Currency:
                    type: string
                type: object
              InstructionIdentification:
                type: string
              RemittanceInformation:
                properties:
                  Reference:
                    type: string
                  Unstructured:
                    type: string
                type: object
            type: object
          Status:
            type: string
          StatusUpdateDateTime:
            type: string
        type: object
      Links:
        properties:
          Self:
            type: string
        type: object
      Meta:
        properties: {}
        type: object
      Risk:
        properties:
          DeliveryAddress:
            properties:
              AddressLine:
                items:
                  type: string
                type: array
              BuildingNumber:
                type: string
              Country:
                type: string
              CountySubDivision:
                items:
                  type: string
                type: array
              PostCode:
                type: string
              StreetName:
                type: string
              TownName:
                type: string
            type: object
          MerchantCategoryCode:
            type: string
          MerchantCustomerIdentification:
            type: string
          PaymentContextCode:
            type: string
        type: object
    type: object
  CreateConsentRequest:
    description: ''
    example: '{"Data":{"Initiation":{"InstructionIdentification":"ACME412","EndToEndIdentification":"FRESCO.21302.GFX.20","InstructedAmount":{"Amount":"165.88","Currency":"GBP"},"CreditorAccount":{"SchemeName":"UK.OBIE.SortCodeAccountNumber","Identification":"08080021325698","Name":"ACME
      Inc","SecondaryIdentification":"0002"},"RemittanceInformation":{"Reference":"FRESCO-101","Unstructured":"Internal
      ops code 5120101"}}},"Risk":{"PaymentContextCode":"EcommerceGoods","MerchantCategoryCode":"5967","MerchantCustomerIdentification":"053598653254","DeliveryAddress":{"AddressLine":["Flat
      7","Acacia Lodge"],"StreetName":"Acacia Avenue","BuildingNumber":"27","PostCode":"GU31
      2ZZ","TownName":"Sparsholt","CountySubDivision":["Wessex"],"Country":"UK"}}}'
    properties:
      Data:
        properties:
          Initiation:
            properties:
              CreditorAccount:
                properties:
                  Identification:
                    type: string
                  Name:
                    type: string
                  SchemeName:
                    type: string
                  SecondaryIdentification:
                    type: string
                type: object
              EndToEndIdentification:
                type: string
              InstructedAmount:
                properties:
                  Amount:
                    type: string
                  Currency:
                    type: string
                type: object
              InstructionIdentification:
                type: string
              RemittanceInformation:
                properties:
                  Reference:
                    type: string
                  Unstructured:
                    type: string
                type: object
            type: object
        type: object
      Risk:
        properties:
          DeliveryAddress:
            properties:
              AddressLine:
                items:
                  type: string
                type: array
              BuildingNumber:
                type: string
              Country:
                type: string
              CountySubDivision:
                items:
                  type: string
                type: array
              PostCode:
                type: string
              StreetName:
                type: string
              TownName:
                type: string
            type: object
          MerchantCategoryCode:
            type: string
          MerchantCustomerIdentification:
            type: string
          PaymentContextCode:
            type: string
        type: object
    type: object
  CreateConsentResponse:
    description: ''
    example: '{"Data":{"ConsentId":"58923","Status":"AwaitingAuthorisation","CreationDateTime":"2017-06-05T15:15:13+00:00","StatusUpdateDateTime":"2017-06-05T15:15:13+00:00","Initiation":{"InstructionIdentification":"ACME412","EndToEndIdentification":"FRESCO.21302.GFX.20","InstructedAmount":{"Amount":"165.88","Currency":"GBP"},"CreditorAccount":{"SchemeName":"UK.OBIE.SortCodeAccountNumber","Identification":"08080021325698","Name":"ACME
      Inc","SecondaryIdentification":"0002"},"RemittanceInformation":{"Reference":"FRESCO-101","Unstructured":"Internal
      ops code 5120101"}}},"Risk":{"PaymentContextCode":"EcommerceGoods","MerchantCategoryCode":"5967","MerchantCustomerIdentification":"053598653254","DeliveryAddress":{"AddressLine":["Flat
      7","Acacia Lodge"],"StreetName":"Acacia Avenue","BuildingNumber":"27","PostCode":"GU31
      2ZZ","TownName":"Sparsholt","CountySubDivision":["Wessex"],"Country":"UK"}},"Links":{"Self":"https://api.alphabank.com/open-banking/v3.1/pisp/domestic-payment-consents/58923"},"Meta":{}}'
    properties:
      Data:
        properties:
          ConsentId:
            type: string
          CreationDateTime:
            type: string
          Initiation:
            properties:
              CreditorAccount:
                properties:
                  Identification:
                    type: string
                  Name:
                    type: string
                  SchemeName:
                    type: string
                  SecondaryIdentification:
                    type: string
                type: object
              EndToEndIdentification:
                type: string
              InstructedAmount:
                properties:
                  Amount:
                    type: string
                  Currency:
                    type: string
                type: object
              InstructionIdentification:
                type: string
              RemittanceInformation:
                properties:
                  Reference:
                    type: string
                  Unstructured:
                    type: string
                type: object
            type: object
          Status:
            type: string
          StatusUpdateDateTime:
            type: string
        type: object
      Links:
        properties:
          Self:
            type: string
        type: object
      Meta:
        properties: {}
        type: object
      Risk:
        properties:
          DeliveryAddress:
            properties:
              AddressLine:
                items:
                  type: string
                type: array
              BuildingNumber:
                type: string
              Country:
                type: string
              CountySubDivision:
                items:
                  type: string
                type: array
              PostCode:
                type: string
              StreetName:
                type: string
              TownName:
                type: string
            type: object
          MerchantCategoryCode:
            type: string
          MerchantCustomerIdentification:
            type: string
          PaymentContextCode:
            type: string
        type: object
    type: object
  CreatePaymentRequest:
    description: ''
    example: '{"Data":{"ConsentId":"58923","Initiation":{"InstructionIdentification":"ACME412","EndToEndIdentification":"FRESCO.21302.GFX.20","InstructedAmount":{"Amount":"165.88","Currency":"GBP"},"CreditorAccount":{"SchemeName":"UK.OBIE.SortCodeAccountNumber","Identification":"08080021325698","Name":"ACME
      Inc","SecondaryIdentification":"0002"},"RemittanceInformation":{"Reference":"FRESCO-101","Unstructured":"Internal
      ops code 5120101"}}},"Risk":{"PaymentContextCode":"EcommerceGoods","MerchantCategoryCode":"5967","MerchantCustomerIdentification":"053598653254","DeliveryAddress":{"AddressLine":["Flat
      7","Acacia Lodge"],"StreetName":"Acacia Avenue","BuildingNumber":"27","PostCode":"GU31
      2ZZ","TownName":"Sparsholt","CountySubDivision":["Wessex"],"Country":"UK"}}}'
    properties:
      Data:
        properties:
          ConsentId:
            type: string
          Initiation:
            properties:
              CreditorAccount:
                properties:
                  Identification:
                    type: string
                  Name:
                    type: string
                  SchemeName:
                    type: string
                  SecondaryIdentification:
                    type: string
                type: object
              EndToEndIdentification:
                type: string
              InstructedAmount:
                properties:
                  Amount:
                    type: string
                  Currency:
                    type: string
                type: object
              InstructionIdentification:
                type: string
              RemittanceInformation:
                properties:
                  Reference:
                    type: string
                  Unstructured:
                    type: string
                type: object
            type: object
        type: object
      Risk:
        properties:
          DeliveryAddress:
            properties:
              AddressLine:
                items:
                  type: string
                type: array
              BuildingNumber:
                type: string
              Country:
                type: string
              CountySubDivision:
                items:
                  type: string
                type: array
              PostCode:
                type: string
              StreetName:
                type: string
              TownName:
                type: string
            type: object
          MerchantCategoryCode:
            type: string
          MerchantCustomerIdentification:
            type: string
          PaymentContextCode:
            type: string
        type: object
    type: object
  CreatePaymentResponse:
    description: ''
    example: '{"Data":{"DomesticPaymentId":"58923-001","ConsentId":"58923","Status":"AcceptedSettlementInProcess","CreationDateTime":"2017-06-05T15:15:22+00:00","StatusUpdateDateTime":"2017-06-05T15:15:13+00:00","Initiation":{"InstructionIdentification":"ACME412","EndToEndIdentification":"FRESCO.21302.GFX.20","InstructedAmount":{"Amount":"165.88","Currency":"GBP"},"CreditorAccount":{"SchemeName":"UK.OBIE.SortCodeAccountNumber","Identification":"08080021325698","Name":"ACME
      Inc","SecondaryIdentification":"0002"},"RemittanceInformation":{"Reference":"FRESCO-101","Unstructured":"Internal
      ops code 5120101"}}},"Links":{"Self":"https://api.alphabank.com/open-banking/v3.1/pisp/domestic-payments/58923-001"},"Meta":{}}'
    properties:
      Data:
        properties:
          ConsentId:
            type: string
          CreationDateTime:
            type: string
          DomesticPaymentId:
            type: string
          Initiation:
            properties:
              CreditorAccount:
                properties:
                  Identification:
                    type: string
                  Name:
                    type: string
                  SchemeName:
                    type: string
                  SecondaryIdentification:
                    type: string
                type: object
              EndToEndIdentification:
                type: string
              InstructedAmount:
                properties:
                  Amount:
                    type: string
                  Currency:
                    type: string
                type: object
              InstructionIdentification:
                type: string
              RemittanceInformation:
                properties:
                  Reference:
                    type: string
                  Unstructured:
                    type: string
                type: object
            type: object
          Status:
            type: string
          StatusUpdateDateTime:
            type: string
        type: object
      Links:
        properties:
          Self:
            type: string
        type: object
      Meta:
        properties: {}
        type: object
    type: object
  PaymentStatusResponse:
    description: ''
    example: '{"Data":{"DomesticPaymentId":"58923-001","ConsentId":"58923","Status":"AcceptedSettlementInProcess","CreationDateTime":"2017-06-05T15:15:22+00:00","StatusUpdateDateTime":"2017-06-05T15:15:22+00:00","Initiation":{"InstructionIdentification":"ACME412","EndToEndIdentification":"FRESCO.21302.GFX.20","InstructedAmount":{"Amount":"165.88","Currency":"GBP"},"CreditorAccount":{"SchemeName":"UK.OBIE.SortCodeAccountNumber","Identification":"08080021325698","Name":"ACME
      Inc","SecondaryIdentification":"0002"},"RemittanceInformation":{"Reference":"FRESCO-101","Unstructured":"Internal
      ops code 5120101"}}},"Links":{"Self":"https://api.alphabank.com/open-banking/v3.1/pisp/domestic-payments/58923-001"},"Meta":{}}'
    properties:
      Data:
        properties:
          ConsentId:
            type: string
          CreationDateTime:
            type: string
          DomesticPaymentId:
            type: string
          Initiation:
            properties:
              CreditorAccount:
                properties:
                  Identification:
                    type: string
                  Name:
                    type: string
                  SchemeName:
                    type: string
                  SecondaryIdentification:
                    type: string
                type: object
              EndToEndIdentification:
                type: string
              InstructedAmount:
                properties:
                  Amount:
                    type: string
                  Currency:
                    type: string
                type: object
              InstructionIdentification:
                type: string
              RemittanceInformation:
                properties:
                  Reference:
                    type: string
                  Unstructured:
                    type: string
                type: object
            type: object
          Status:
            type: string
          StatusUpdateDateTime:
            type: string
        type: object
      Links:
        properties:
          Self:
            type: string
        type: object
      Meta:
        properties: {}
        type: object
    type: object
host: $(catalog.host)
info:
  description: Retail Payment
  title: Retail Single Payment (Open Banking Standard)
  version: 1.0.0
  x-ibm-name: retail-single-payment-open-banking
paths:
  /domestic-payment-consents:
    post:
      consumes: []
      parameters:
      - description: Bearer Intent Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Idempotency Key
        in: header
        name: x-idempotency-key
        required: true
        type: string
      - description: Request Payload Digital Signature
        in: header
        name: x-jws-signature
        required: true
        type: string
      - description: Sun, 10 Sep 2017 19:43:31 GMT
        in: header
        name: x-fapi-auth-date
        required: true
        type: string
      - description: End Consumer Device IP address
        in: header
        name: x-fapi-customer-ip-address
        required: true
        type: string
      - description: Unique GUID
        in: header
        name: x-fapi-interaction-id
        required: true
        type: string
      - description: Request Payload
        in: body
        name: CreateConsentRequest
        required: true
        schema:
          $ref: '#/definitions/CreateConsentRequest'
      produces: []
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/CreateConsentResponse'
      security:
      - AppID: []
        AppSecret: []
        TPPOAuthSecurity:
        - tpp_client_credentials
  /domestic-payment-consents/{ConsentId}:
    get:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/ConsentStatusResponse'
      security:
      - AppID: []
        AppSecret: []
        UserOAuthSecurity:
        - payment
    parameters:
    - description: ConsentId
      in: path
      name: ConsentId
      required: true
      type: string
    - description: Bearer Token
      in: header
      name: Authorization
      required: false
      type: string
    - in: header
      name: x-fapi-auth-date
      required: false
      type: string
    - in: header
      name: x-fapi-customer-ip-address
      required: false
      type: string
    - in: header
      name: x-fapi-interaction-id
      required: false
      type: string
  /domestic-payment-consents/{ConsentId}/funds-confirmation:
    get:
      consumes: []
      produces: []
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/ConfirmFundResponse'
      security:
      - AppID: []
        AppSecret: []
        UserOAuthSecurity:
        - payment
    parameters:
    - description: ConsentId
      in: path
      name: ConsentId
      required: true
      type: string
    - description: Bearer Token
      in: header
      name: Authorization
      required: true
      type: string
    - in: header
      name: x-fapi-auth-date
      required: true
      type: string
    - in: header
      name: x-fapi-customer-ip-address
      required: true
      type: string
    - in: header
      name: x-fapi-interaction-id
      required: true
      type: string
  /domestic-payments:
    post:
      parameters:
      - description: Bearer Intent Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Idempotency Key
        in: header
        name: x-idempotency-key
        required: true
        type: string
      - description: Request Payload Digital Signature
        in: header
        name: x-jws-signature
        required: true
        type: string
      - description: Sun, 10 Sep 2017 19:43:31 GMT
        in: header
        name: x-fapi-auth-date
        required: true
        type: string
      - description: End Consumer Device IP address
        in: header
        name: x-fapi-customer-ip-address
        required: true
        type: string
      - description: Unique GUID
        in: header
        name: x-fapi-interaction-id
        required: true
        type: string
      - description: Request Payload
        in: body
        name: CreatePaymentRequest
        required: true
        schema:
          $ref: '#/definitions/CreatePaymentRequest'
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/CreatePaymentResponse'
      security:
      - AppID: []
        AppSecret: []
        UserOAuthSecurity:
        - payment
  /domestic-payments/{DomesticPaymentId}:
    get:
      responses:
        '200':
          description: 200 OK
          schema:
            $ref: '#/definitions/PaymentStatusResponse'
      security:
      - AppID: []
        AppSecret: []
        UserOAuthSecurity:
        - payment
    parameters:
    - description: ConsentId
      in: path
      name: DomesticPaymentId
      required: true
      type: string
    - description: Bearer Token
      in: header
      name: Authorization
      required: false
      type: string
    - in: header
      name: x-fapi-auth-date
      required: false
      type: string
    - in: header
      name: x-fapi-customer-ip-address
      required: false
      type: string
    - in: header
      name: x-fapi-interaction-id
      required: false
      type: string
produces:
- application/json
schemes:
- https
security:
- AppID: []
  AppSecret: []
securityDefinitions:
  AppID:
    in: header
    name: x-client-id
    type: apiKey
    x-key-type: client_id
  AppSecret:
    in: header
    name: x-client-secret
    type: apiKey
    x-key-type: client_secret
  TPPOAuthSecurity:
    flow: application
    scopes:
      tpp_client_credentials: Access TPP services
    tokenUrl: https://example.com/token
    type: oauth2
    x-ibm-oauth-provider: your-oauth-provider
  UserOAuthSecurity:
    authorizationUrl: https://example.com/authorize
    flow: accessCode
    scopes:
      payment: Access payment services
    tokenUrl: https://example.com/token
    type: oauth2
    x-ibm-oauth-provider: your-oauth-provider
swagger: '2.0'
tags: []
x-ibm-configuration:
  activity-log:
    enabled: true
    error-content: activity
    success-content: activity
  application-authentication:
    certificate: false
  assembly:
    execute:
    - switch:
        case:
        - condition: ($operationPath() = '/domestic-payment-consents')
          execute:
          - gatewayscript:
              source: "context.message.header.set('clientorgname',context.get('client.org.name'));\
                \ \ncontext.message.header.set('clientappname',context.get('client.app.name'));\n\
                context.message.header.set('clientappid',context.get('client.app.id')); "
              title: gatewayscript
              version: 2.0.0
          - invoke:
              cache-response: protocol
              cache-ttl: 900
              header-control:
                type: blacklist
                values: []
              inject-proxy-headers: true
              parameter-control:
                type: blacklist
                values: []
              stop-on-error:
              - ConnectionError
              target-url: $(idbp-consent-mgmt)/secapp/int/payment/consentid/generate
              timeout: 60
              title: invoke
              verb: keep
              version: 2.0.0
        - condition: ($operationPath() = '/domestic-payment-consents/{ConsentId}')
          execute:
          - gatewayscript:
              source: '

                console.error("DEBUG ConsentID from Path:",context.get(''request.parameters.ConsentId''))'
              title: gatewayscript
              version: 2.0.0
          - invoke:
              cache-response: protocol
              cache-ttl: 900
              header-control:
                type: blacklist
                values: []
              inject-proxy-headers: true
              parameter-control:
                type: blacklist
                values: []
              stop-on-error:
              - ConnectionError
              target-url: $(idbp-consent-mgmt)/secapp/int/consentid/status?consentid=$(request.parameters.ConsentId)
              timeout: 60
              title: invoke
              verb: keep
              version: 2.0.0
        - condition: (($operationPath() = '/domestic-payment-consents/{ConsentId}/funds-confirmation'))
          execute:
          - invoke:
              cache-response: protocol
              cache-ttl: 900
              header-control:
                type: blacklist
                values: []
              parameter-control:
                type: blacklist
                values: []
              stop-on-error:
              - ConnectionError
              target-url: $(ace-funds-confirmation)/domestic-payment-consents/funds-confirmation
              timeout: 60
              title: invoke
              verb: keep
              version: 2.0.0
        - condition: ($operationPath() = '/domestic-payments')
          execute:
          - gatewayscript:
              source: "var myAppConsoleLog = console.options({\n 'category': 'app_LC'\n\
                });\nconst fileName = \"insertDebtorDetailsGwys\"\nmyAppConsoleLog.debug('in\
                \ ' + fileName);\n\nfunction verifyInputvsTokenMetadata(tokenMetadataObj,req_consentid,\
                \ req_amt, req_currency, req_tppOrgName) { \n    // tokenMetadata\
                \ consentid, amt, currency,  tpp_org_name, username, scope, debitorAcc\
                \ \n    myAppConsoleLog.error('DEBUG in insertDebtorDetailsGwys :\
                \ tokenMetadataObj: ',tokenMetadataObj);\n    myAppConsoleLog.error('DEBUG\
                \ in insertDebtorDetailsGwys : tokenMetadataObj[consentid: ',tokenMetadataObj['consentid']);\n\
                \    myAppConsoleLog.error('DEBUG in insertDebtorDetailsGwys : tokenMetadataObj[amt:\
                \ ',tokenMetadataObj['amt']);\n    myAppConsoleLog.error('DEBUG in\
                \ insertDebtorDetailsGwys : tokenMetadataObj[currency: ',tokenMetadataObj['currency']);\n\
                \    myAppConsoleLog.error('DEBUG in insertDebtorDetailsGwys : tokenMetadataObj[tpp_org_name:\
                \ ',tokenMetadataObj['tpp_org_name']);\n    myAppConsoleLog.error('DEBUG\
                \ in insertDebtorDetailsGwys : req_consentid: ',req_consentid);\n\
                \    myAppConsoleLog.error('DEBUG in insertDebtorDetailsGwys : req_amt:\
                \ ',req_amt);\n    myAppConsoleLog.error('DEBUG in insertDebtorDetailsGwys\
                \ : req_currency: ',req_currency);\n    myAppConsoleLog.error('DEBUG\
                \ in insertDebtorDetailsGwys : req_tppOrgName: ',req_tppOrgName);\n\
                \    \n    if ((tokenMetadataObj['consentid'] !=  req_consentid) ||\
                \ (tokenMetadataObj['amt'] !=  req_amt) || (tokenMetadataObj['currency']\
                \ !=  req_currency) || (tokenMetadataObj['tpp_org_name'] !=  req_tppOrgName))\
                \ {\n            myAppConsoleLog.error('in ' + fileName + ' : request\
                \ data not correct');\n\t\t\tcontext.set('custErrMsg','in insertDebtorDetailsGwys\
                \ : request data not correct');\n\t\t\tcontext.reject('CustomError',\
                \ 'GWICE400');\n    }\n}\n\n\n\n//var ctx = session.name('myapicgwyctx')\n\
                try {\n\tcontext.request.body.readAsBuffer(function(error, origrequest)\
                \ {\n\t  \tif (error) {\n\t   \t\tmyAppConsoleLog.error('in ' + fileName\
                \ + ' : failed to read request : ' + err);\n\t\t\tcontext.set('custErrMsg','in\
                \ insertDebtorDetailsGwys : failed to read request : ' + err);\n\t\
                \t\tcontext.reject('CustomError', 'GWICE400');\n\t  \t} else {\n\t\
                \   \t\ttry {\n\t    \t\tvar origrequestStr = origrequest.toString('utf8');\n\
                \t    \t\ttry {\n\t     \t\t\tvar origPymtReq = JSON.parse(origrequestStr);\n\
                \t     \t\t\t\n\t     \t\t\tmyAppConsoleLog.error('**DEBUG : type\
                \ origPymtReq: ', typeof(origPymtReq))\n\t     \t\t\tmyAppConsoleLog.error('**DEBUG\
                \ :  origPymtReq: ', origPymtReq)\n\t     \t\t\t\n\t     \t\t\tif\
                \ (origPymtReq.Data.Initiation) {\n\t      \t\t\t\tvar consentid =\
                \ origPymtReq.Data.ConsentId\n\t      \t\t\t\t\n\t      \t\t\t\tmyAppConsoleLog.error(\"\
                DEBUG submitpymt gwys consentid: \", consentid)\n\t      \t\t\t  \
                \  \n\t      \t\t\t    let token_metadata = context.get('oauth.verified_access_token.misc_info')\n\
                \t      \t\t\t    \n\t      \t\t\t    myAppConsoleLog.error('**DEBUG\
                \ : token_metadata: ', token_metadata)\n\t      \t\t\t    myAppConsoleLog.error('**DEBUG\
                \ : TYPEOF token_metadata: ', typeof(token_metadata))\n\t      \t\t\
                \t    \n\t      \t\t\t    token_metadata = token_metadata.slice(token_metadata.indexOf('a:')\
                \ + 2)\n\t      \t\t\t    \n\t      \t\t\t    myAppConsoleLog.error('**DEBUG\
                \ : token_metadata after slice: ', token_metadata)\n\t      \t\t\t\
                \    \n\t      \t\t\t    token_metadata = JSON.parse(token_metadata)\n\
                \t      \t\t\t    \n\t      \t\t\t    myAppConsoleLog.error('**DEBUG\
                \ : TYPEOF token_metadata: ', typeof(token_metadata))\n\t      \t\t\
                \t    \n\t      \t\t\t    verifyInputvsTokenMetadata(token_metadata,\
                \ origPymtReq['Data']['ConsentId'], origPymtReq['Data']['Initiation']['InstructedAmount']['Amount'],\
                \ origPymtReq['Data']['Initiation']['InstructedAmount']['Currency'],context.get('client.org.name')\
                \ )\n\t      \t\t\t    \n\t      \t\t\t    myAppConsoleLog.error('**DEBUG\
                \ : tokenmeta consentid: ', token_metadata['consentid'])\n\t     \
                \ \t\t\t    myAppConsoleLog.error('**DEBUG : tokenmeta amt: ', token_metadata['amt'])\n\
                \t      \t\t\t    myAppConsoleLog.error('**DEBUG : tokenmeta currency:\
                \ ', token_metadata['currency'])\n\t      \t\t\t    myAppConsoleLog.error('**DEBUG\
                \ : tokenmeta debitorAcc: ', token_metadata['debitorAcc'])\n\t   \
                \   \t\t\t    \n   \t\t\t\t\t\tlet debitorAccStr = token_metadata['debitorAcc']\n\
                \   \t\t\t\t\t\tlet debitorAccArry = debitorAccStr.split(',')\n  \
                \ \t\t\t\t\t\tlet debitorAccObj = {\n   \t\t\t\t\t\t    \"SchemeName\"\
                : debitorAccArry[0],\n                        \t\"Identification\"\
                : debitorAccArry[1],\n                        \t\"Name\": debitorAccArry[2],\n\
                \                        \t\"SecondaryIdentification\": debitorAccArry[3],\n\
                \   \t\t\t\t\t\t}\n   \t\t\t\t\t\torigPymtReq.Data.Initiation.DebitorAccount\
                \ = debitorAccObj\n   \t\t\t\t\t\t\n   \t\t\t\t\t\tcontext.message.header.set('clientorgname',context.get('client.org.name'))\n\
                \                        context.message.header.set('clientappname',context.get('client.app.name'))\
                \ \n                        context.message.header.set('clientappid',context.get('client.app.id'))\n\
                \   \t\t\t\t\t\t\n   \t\t\t\t\t\tmyAppConsoleLog.error('**DEBUG :\
                \ final origPymtReq: ', JSON.stringify(origPymtReq))\n   \t\t\t\t\t\
                \tmyAppConsoleLog.error('**DEBUG : final headers: ', JSON.stringify(context.get('message.headers')))\n\
                \   \t\t\t\t\t\t\n   \t\t\t\t\t\tmyAppConsoleLog.error('**DEBUG :\
                \ final ace url: ', context.get('ace-retail-single-pymt-online'),\
                \ '/domestic-payments')\n   \t\t\t\t\t\t\n   \t\t\t\t\t\tcontext.message.header.set('Content-Type','application/json');\n\
                \t\t\t\t    \tcontext.message.body.write(origPymtReq);\n\t\t\t\t\t\
                \n   \t\t\t\t\t\n\n\t\t\t\t\t} else {\n\t\t\t\t\t    myAppConsoleLog.error('in\
                \ ' + fileName + ' : request is invalid for single payment');\n  \
                \                      context.set('custErrMsg','in insertDebtorDetailsGwys\
                \ : request is invalid for single payment');\n\t\t\t            context.reject('CustomError',\
                \ 'GWICE400');\n\t     \t\t\t}\n\t    \t\t} catch (e) {\n\t    \t\t\
                \    myAppConsoleLog.error('in ' + fileName + ' : failed to parse\
                \ single payment orig request as JSON');\n                    context.set('custErrMsg','in\
                \ insertDebtorDetailsGwys : failed to parse single payment orig request\
                \ as JSON');\n\t\t\t        context.reject('CustomError', 'GWIBE500');\n\
                \t\t\t\t}\n\t   \t\t} catch (e) {\n\t   \t\t    myAppConsoleLog.error('in\
                \ ' + fileName + ' : failed to convert single payment orig request\
                \ BufferToString: ' + e);\n                context.set('custErrMsg','in\
                \ insertDebtorDetailsGwys : failed to convert single payment orig\
                \ request BufferToString: ' + e);\n\t\t\t    context.reject('CustomError',\
                \ 'GWIBE500');\n\t\t\t}\n\t  \t}\n\t  \t/*\n  \t\t// set context variable\
                \ for Audit Logging\n  \t\tvar dt = new Date();\n  \t\tvar lastStepTime\
                \ = ctx.getVariable('CurrTime');\n  \t\tif (typeof lastStepTime !=\
                \ 'undefined') {\n   \t\t\tapim.setvariable('CurrTime', dt.getTime());\n\
                \   \t\t\tapim.setvariable('TranDuration', ctx.getVariable('TranDuration')\
                \ + ', insertDebtorDetailsGwysTime:' + (dt.getTime() - lastStepTime));\n\
                \  \t\t}\n  \t\t*/\n \t});\n} catch (e) {\n    myAppConsoleLog.error('in\
                \ ' + fileName + ' : ' + e);\n    context.set('custErrMsg','in insertDebtorDetailsGwys\
                \ : ' + e);\n\tcontext.reject('CustomError', 'GWISE500');\n}"
              title: gatewayscript
              version: 2.0.0
          - invoke:
              cache-response: protocol
              cache-ttl: 900
              header-control:
                type: blacklist
                values: []
              parameter-control:
                type: blacklist
                values: []
              stop-on-error:
              - ConnectionError
              target-url: $(ace-retail-single-pymt-online)/domestic-payments
              timeout: 60
              title: invoke
              verb: keep
              version: 2.0.0
        - condition: ($operationPath() = '/domestic-payments/{DomesticPaymentId}')
          execute:
          - invoke:
              cache-response: protocol
              cache-ttl: 900
              header-control:
                type: blacklist
                values: []
              parameter-control:
                type: blacklist
                values: []
              stop-on-error:
              - ConnectionError
              target-url: $(pymtidstatus-url)$(req.path)
              timeout: 60
              title: invoke
              verb: keep
              version: 2.0.0
        title: switch
        version: 2.0.0
  categories:
  - Payment/OpenBanking/Retail
  cors:
    enabled: true
  enforced: true
  gateway: datapower-api-gateway
  phase: realized
  properties:
    ace-funds-confirmation:
      value: http://idbp-consent-mgmt-APPNAMESPACE-APPDOMAIN/ping
    ace-retail-single-pymt-online:
      value: http://singlepaymentapi-http-ACENAMESPACE-CP4IDOMAIN
    idbp-consent-mgmt:
      value: http://idbp-consent-mgmt-APPNAMESPACE-APPDOMAIN
    pymtidstatus-url:
      value: http://singlepayment-status-recorder-APPNAMESPACE-APPDOMAIN
    target-url:
      description: The URL of the target service
      encoded: false
      value: http://example.com/operation-name
  testable: true
  type: rest
